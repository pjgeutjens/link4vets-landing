{"version":3,"sources":["app/api/agent.ts","app/stores/appStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/layout/NavBar.tsx","app/layout/LoadingComponent.tsx","features/applications/details/ApplicationDetails.tsx","features/applications/dashboard/ApplicationListItem.tsx","features/applications/dashboard/ApplicationList.tsx","features/applications/dashboard/ApplicationDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","features/feedback/FeedbackForm.tsx","app/common/modals/ModalContainer.tsx","app/common/form/MyTextArea.tsx","features/profiles/form/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","interceptors","response","use","a","error","data","status","config","headers","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startsWith","store","userStore","logout","commonStore","setServerError","Promise","reject","defaults","baseURL","process","request","token","Authorization","responseBody","requests","url","get","then","body","post","put","delete","agent","Applications","list","details","id","create","app","update","delele","Account","current","login","user","register","refreshToken","Profiles","username","updateProfile","profile","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","AppStore","appsRegistry","Map","selectedApp","undefined","loading","loadingInitial","loadApps","setLoadingInitial","forEach","set","setSelectedapp","apps","console","log","loadApp","getApp","setApp","state","makeAutoObservable","this","Array","from","values","ProfileStore","loadingProfile","uploading","loadProfile","userName","runInAction","displayName","setDisplayName","photo","photos","isMain","setImage","image","find","p","filter","UserStore","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","stopRefreshTokenTimer","jwtToken","JSON","parse","atob","split","timeout","Date","exp","getTime","now","setTimeout","clearTimeout","appStore","getItem","appLoaded","setAppLoaded","reaction","setItem","modal","open","openModal","content","profileStore","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","name","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","LoadingComponent","Dimmer","active","Loader","useParams","useEffect","Card","fluid","category","toLowerCase","Content","Header","Description","description","extra","ApplicationListItem","Segment","Group","isExternal","Label","marginLeft","color","ribbon","size","clearing","Button","floated","target","pathname","baseUrl","secondary","map","Grid","Column","width","MyTextInput","props","useField","field","meta","Form","Field","touched","label","basic","initialValues","email","password","onSubmit","setErrors","catch","handleSubmit","isSubmitting","className","autoComplete","textAlign","placeholder","type","render","marginBottom","positive","ValidationErrors","Message","List","err","i","UniqueId","validationSchema","Yup","required","uniqueId","matches","isValid","dirty","disabled","vertical","isLoggedIn","TestErrors","useState","widths","primary","NotFound","Icon","Inline","sub","message","marginTop","handleInputChange","event","value","FeedbackForm","Input","onChange","TextArea","Modal","onClose","MyTextArea","ProfileEditForm","setEditMode","enableReinitialize","bio","rows","editMode","seteditMode","isCurrentUser","Tab","Pane","whiteSpace","PhotoWidgetCropper","imagePreview","setCropper","height","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","border","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","length","minHeight","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","setTarget","itemsPerRow","e","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","menu","menuPosition","verticalAlign","PrivateRoute","Component","component","rest","finally","hideProgressBar","path","HomePage","ApplicationDashboard","ApplicationDetails","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","useLocation","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.8b0efa33.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { history } from '../..';\nimport { Application } from '../models/app';\nimport { Photo, Profile } from '../models/profile';\nimport { User, UserFormValues } from '../models/User';\nimport { store } from '../stores/store';\n\nconst sleep = (delay: number) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, delay)\n    })\n}\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\n    return response;\n}, (error: AxiosError) => {\n    const { data, status, config, headers } = error.response!;\n    switch (status) {\n        case 400:\n            if (typeof(data) === 'string') toast.error(data)\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) \n                history.push('not-found')\n            if (data.errors) {\n                const modalStateErrors = [];\n                for (const key in data.errors) {\n                    if(data.errors[key]) modalStateErrors.push(data.errors[key]);\n                }\n                throw modalStateErrors.flat();\n            }\n            break;\n        case 401:\n            if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\n                store.userStore.logout();\n                toast.error('Session expired - please login again');\n            }\n            break;\n        case 404:\n            history.push('/not-found')\n            break;\n        case 500:\n            store.commonStore.setServerError(data)\n            history.push('server-error');\n            break;\n    }\n    return Promise.reject(error)\n})\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n    const token = store.commonStore.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`\n    return config;\n})\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Applications = {\n    list: () => requests.get<Application[]>('/apps'),\n    details: (id: string) => requests.get<Application>(`/apps/${id}`),\n    create: (app: Application) => requests.post<void>(`/apps`, app),\n    update: (app: Application) => requests.put<void>(`/apps`, app),\n    delele: (id: string) => requests.del<void>(`/apps/${id}`)\n}\n\nconst Account = {\n    current: () => requests.get<User>('/account'),\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\n    refreshToken: () => requests.post<User>('/account/refreshToken', {})\n}\n\nconst Profiles = {\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n    updateProfile: (profile: Partial<Profile>) => requests.put('/profiles', profile),\n    uploadPhoto: (file: Blob) => {\n        let formData = new FormData();\n        formData.append('File', file);\n        return axios.post<Photo>('photos', formData, {\n            headers: {'Content-type': 'multipart/form-data'}\n        })\n    },\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`)\n}\n\nconst agent = {\n    Applications,\n    Account,\n    Profiles\n}\n\nexport default agent;","import { makeAutoObservable } from 'mobx'\nimport agent from '../api/agent';\nimport { Application } from '../models/app'\n\nexport default class AppStore {\n    appsRegistry = new Map<string, Application>();\n    selectedApp: Application | undefined = undefined;\n    loading = false;\n    loadingInitial = false;\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    get apps() {\n        return Array.from(this.appsRegistry.values())\n    }\n\n    loadApps = async () => {\n        this.setLoadingInitial(true);\n        try {\n            const apps = await agent.Applications.list();\n            apps.forEach(app => {\n                this.appsRegistry.set(app.id, app);\n            })\n            this.setSelectedapp(this.apps[0])\n            this.setLoadingInitial(false);\n\n        } catch (error) {\n            console.log(error);\n            this.setLoadingInitial(false);\n        }\n    }\n\n    loadApp = async (id:string) => {\n        let app = this.getApp(id);\n        if (app) {this.selectedApp = app}\n        else {\n            this.loadingInitial = true;\n            try {\n                app = await agent.Applications.details(id);\n                this.setApp(app);\n                this.setSelectedapp(app);\n                this.setLoadingInitial(false);\n                \n            } catch (error) {\n                console.log(error);\n                this.setLoadingInitial(false);\n                \n            }\n        }\n    }\n\n    private getApp = (id: string) => this.appsRegistry.get(id)\n    private setApp = (app: Application) => {\n        this.appsRegistry.set(app.id, app);\n    }\n\n    setLoadingInitial = (state: boolean) => this.loadingInitial = state;\n    setSelectedapp = (app: Application) => this.selectedApp = app;\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n    profile: Profile | null = null;\n    loadingProfile = false;\n    uploading = false;\n    loading = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    get isCurrentUser() {\n        if (store.userStore.user && this.profile) {\n            return store.userStore.user.userName === this.profile.userName;\n        }\n        return false;\n    }\n\n    loadProfile = async (userName: string) => {\n        this.loadingProfile = true;\n        try {\n            const profile = await agent.Profiles.get(userName);\n            runInAction(() => {\n                this.profile = profile;\n                this.loadingProfile = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loadingProfile = false);\n        }\n    }\n\n    updateProfile = async (profile: Partial<Profile>) => {\n      this.loading = true;\n      try {\n          await agent.Profiles.updateProfile(profile);\n          runInAction(() => {\n              if (profile.displayName && profile.displayName !==\n                  store.userStore.user?.displayName) {\n                  store.userStore.setDisplayName(profile.displayName);\n              }\n              this.profile = { ...this.profile, ...profile as Profile };\n              this.loading = false;\n          })\n      } catch (error) {\n          console.log(error);\n          runInAction(() => this.loading = false);\n      }\n  }\n\n    uploadPhoto = async (file: Blob) => {\n        this.uploading = true;\n        try {\n            const response = await agent.Profiles.uploadPhoto(file);\n            const photo = response.data;\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos?.push(photo);\n                    if (photo.isMain && store.userStore.user) {\n                        store.userStore.setImage(photo.url);\n                        this.profile.image = photo.url;\n                    }\n                }\n                this.uploading = false;\n            })\n        } catch (error) {   \n            console.log(error);\n            runInAction(() => this.uploading = false);\n        }\n    }\n\n    setMainPhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.setMainPhoto(photo.id);\n            store.userStore.setImage(photo.url);\n            runInAction(() => {\n                if (this.profile && this.profile.photos) {\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n                    this.profile.image = photo.url;\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n\n    deletePhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.deletePhoto(photo.id);\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/User\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n    user: User | null = null;\n    refreshTokenTimeout: any;\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    get isLoggedIn() {\n        return !!this.user;\n    }\n\n    login = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.login(creds);\n            store.commonStore.setToken(user.token);\n            this.startRefreshTokenTimer(user);\n            runInAction(() => {\n                this.user = user;\n                history.push('/apps');\n                store.modalStore.closeModal();\n            })\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    logout = () => {\n        store.commonStore.setToken(null);\n        window.localStorage.removeItem('jwt');\n        this.user = null;\n        history.push('/');\n    }\n\n    getUser = async () => {\n        try {\n            const user = await agent.Account.current();\n            runInAction(() => this.user = user)\n            this.startRefreshTokenTimer(user);\n        } catch (error) {\n            console.log(error);\n            \n        }\n    }\n\n    register = async (creds: UserFormValues) => {\n        try {\n            const user = await agent.Account.register(creds);\n            store.commonStore.setToken(user.token);\n            runInAction(() => {\n                this.user = user;\n                history.push('/apps');\n                store.modalStore.closeModal();\n            })\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    refreshToken = async () => {\n        this.stopRefreshTokenTimer();\n        try {\n            const user = await agent.Account.refreshToken();\n            runInAction(() => this.user = user);\n            store.commonStore.setToken(user.token);\n            this.startRefreshTokenTimer(user);\n        } catch (error) {\n            console.log(error);\n            \n        }\n    }\n\n    private startRefreshTokenTimer(user: User) {\n        const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\n        const expires = new Date(jwtToken.exp * 1000);\n        const timeout = expires.getTime() - Date.now() - (60 * 1000)\n        this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout)\n    }\n\n    private stopRefreshTokenTimer() {\n        clearTimeout(this.refreshTokenTimeout);\n    }\n\n    setImage = (image: string) => {\n        if (this.user) this.user.image = image;\n    } \n\n    setDisplayName = (displayName: string) => {\n        if (this.user) this.user.displayName = displayName;\n    } \n\n}","import { createContext, useContext } from \"react\";\nimport AppStore from \"./appStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n    appStore: AppStore\n    commonStore: CommonStore\n    userStore: UserStore\n    modalStore: ModalStore,\n    profileStore: ProfileStore\n}\n\nexport const store: Store = {\n    appStore: new AppStore(),\n    commonStore: new CommonStore(),\n    userStore: new UserStore(),\n    modalStore: new ModalStore(),\n    profileStore: new ProfileStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n    return useContext(StoreContext);\n}","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n    error: ServerError | null = null;\n    token: string | null = window.localStorage.getItem('jwt');\n    appLoaded = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.token,\n            token => {\n                if (token) {\n                    window.localStorage.setItem('jwt', token)\n                } else {\n                    window.localStorage.removeItem('jwt')\n                }\n            }\n        )\n    }\n\n    setServerError = (error: ServerError) => {\n        this.error = error;\n    }\n\n    setToken = (token: string | null) => this.token = token;\n    \n    setAppLoaded = () => this.appLoaded = true;\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null\n  }\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content\n  }\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  }\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Container, Dropdown, Image, Menu } from 'semantic-ui-react';\nimport { useStore } from '../stores/store';\n\nexport default observer(function NavBar() {\n    const { userStore: { user, logout } } = useStore()\n    return (\n        <Menu inverted fixed=\"top\">\n            <Container>\n                <Menu.Item as={NavLink} exact to='/' header>\n                    <img src=\"/assets/logo.jpg\" alt=\"logo\" style={{ marginRight: '10px' }} />\n                    Link4Vets\n                </Menu.Item>\n                <Menu.Item as={NavLink} to='/apps' name=\"Apps\" />\n                <Menu.Item as={NavLink} to='/errors' name=\"Errors\" />\n                <Menu.Item as={NavLink} to='/feedback' name=\"Feedback\" />\n                <Menu.Item position='right'>\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\n                    <Dropdown pointing='top left' text={user?.displayName}>\n                        <Dropdown.Menu>\n                            <Dropdown.Item as={Link} to={`/profiles/${user?.userName}`} text='My Profile' icon='user' />\n                            <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Menu.Item>\n            </Container>\n        </Menu>\n    )\n})","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\ninterface Props {\n    inverted?: boolean;\n    content?: string;\n}\n\nexport default function LoadingComponent({ inverted = true, content = 'Loading...'}: Props) {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content}/>\n        </Dimmer>\n    )\n}\n","import { observer } from 'mobx-react-lite'\nimport React, { useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button, Card, Icon, Image } from 'semantic-ui-react'\nimport LoadingComponent from '../../../app/layout/LoadingComponent'\nimport { useStore } from '../../../app/stores/store'\n\n\nexport default observer(function ApplicationDetails() {\n    const {appStore} = useStore();\n    const {selectedApp: app, loadApp, loadingInitial} = appStore;\n    const {id} = useParams<{id: string}>();\n\n    useEffect(() => {\n        if (id) loadApp(id) \n    }, [id, loadApp])\n\n    if (loadingInitial || !app) return <LoadingComponent />;\n\n    return (\n        <Card fluid>\n            <Image src={`/assets/categoryImages/${app.category.toLowerCase()}.jpg`} />\n            <Card.Content>\n                <Card.Header>{app.displayName}</Card.Header>\n                <Card.Description>\n                    {app.description}\n                </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n                <span>{app.category}</span>\n            </Card.Content>\n        </Card>\n    )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Item, Label, Segment } from 'semantic-ui-react'\nimport { Application } from '../../../app/models/app'\nimport { useStore } from '../../../app/stores/store'\n\ninterface Props {\n    app: Application\n}\n\nexport default function ApplicationListItem({ app }: Props) {\n    const {appStore: {setSelectedapp}} = useStore()\n    return (\n        <Segment.Group>\n            <Segment>\n                <Item.Group>\n                    <Item>\n                        {app.isExternal && <Label\n                            style={{ position: 'absolute', marginLeft: '-12px' }}\n                            color='orange'\n                            ribbon='right'\n                        >\n                            External\n                        </Label>}\n                        <Item.Image size='tiny' avatar src={`/assets/categoryImages/${app.category.toLowerCase()}.jpg`} />\n                        <Item.Content>\n                            <Item.Header as={Link} to={`/apps/${app.id}`}>{app.displayName}</Item.Header>\n                            <Item.Description>{app.category}</Item.Description>\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n            <Segment clearing>\n                <span>{app.description}</span>\n                <Button.Group floated='right'>\n                <Button onClick={() => setSelectedapp(app)} floated='right' content='Details' color='green' />\n                    <Button\n                        as={Link}\n                        target=\"_blank\"\n                        to={{ pathname: app.baseUrl }}\n                        color='blue'\n                        floated='right'\n                        content='Go'\n                    />\n                </Button.Group>\n\n            </Segment>\n\n            <Segment secondary>\n                <span>23 Likes</span>\n            </Segment>\n        </Segment.Group>\n    )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { useStore } from '../../../app/stores/store'\nimport ApplicationListItem from './ApplicationListItem'\n\nexport default observer(function ApplicationList() {\n    const { appStore } = useStore()\n    const { apps } = appStore;\n    return (\n        <>\n            {apps.map(app => (\n                <ApplicationListItem app={app} key={app.id} />\n            ))}\n        </>\n    )\n})\n","import { observer } from 'mobx-react-lite'\nimport React, { useEffect } from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport LoadingComponent from '../../../app/layout/LoadingComponent'\nimport { useStore } from '../../../app/stores/store'\nimport ApplicationDetails from '../details/ApplicationDetails'\nimport ApplicationList from './ApplicationList'\n\nexport default observer(function ApplicationDashboard() {\n    const {appStore} = useStore();\n    const {selectedApp} = appStore;\n\n  useEffect(() => {\n    appStore.loadApps();\n  }, [appStore]);\n\n  if (appStore.loadingInitial) return <LoadingComponent content='Loading Applications...' />\n    return (\n        <Grid>\n            <Grid.Column width='10'>\n                <ApplicationList />\n            </Grid.Column>\n            <Grid.Column width='6'>\n                {selectedApp && \n                <ApplicationDetails />}\n            </Grid.Column>\n        </Grid>\n    )\n})\n","import { useField } from 'formik'\nimport React from 'react'\nimport { Form, Label } from 'semantic-ui-react'\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    label?: string;\n    type?: string;\n}\n\nexport default function MyTextInput(props: Props) {\n    const [field, meta] = useField(props.name)\n    return (\n        <Form.Field error={meta.touched && !!meta.error}> \n            <label>{props.label}</label>\n            <input {...field} {...props} />\n            {meta.touched && meta.error ? \n                <Label basic color='red'>{meta.error}</Label> : null\n            }\n        </Form.Field>\n    )\n}\n","import { ErrorMessage, Form, Formik } from 'formik'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Header, Label } from 'semantic-ui-react'\nimport MyTextInput from '../../app/common/form/MyTextInput'\nimport { useStore } from '../../app/stores/store'\n\nexport default observer(function LoginForm() {\n    const { userStore } = useStore();\n    return (\n        <Formik\n            initialValues={{ email: '', password: '', error: null }}\n            onSubmit={(values, { setErrors }) => userStore.login(values).catch(error => setErrors({ error: 'Invalid email or password' }))}\n        >\n            {({ handleSubmit, isSubmitting, errors }) => (\n                <>\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n                        <Header as='h2' content='Login to Link4Vets' color='teal' textAlign='center' />\n                        <MyTextInput name='email' placeholder='Email' />\n                        <MyTextInput name='password' placeholder='Password' type='password' />\n                        <ErrorMessage\n                            name='error' render={() => <Label style={{ marginBottom: 10 }} basic color='red' content={errors.error} />} />\n                        <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\n                    </Form>\n                    <span><Link to=\"#\">forgot your password?</Link></span>\n                </>\n            )}\n        </Formik>\n    )\n})\n","import React from 'react'\nimport { Message } from 'semantic-ui-react'\n\ninterface Props {\n    errors: any;\n}\n\nexport default function ValidationErrors({errors}: Props) {\n    return (\n        <Message error>\n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, i: any) => (\n                        <Message.Item key={i}>{err}</Message.Item>\n                    ))}\n                </Message.List>\n            )}\n        </Message>\n    )\n}\n","import { ErrorMessage, Form, Formik } from 'formik'\nimport { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Button, Header } from 'semantic-ui-react'\nimport MyTextInput from '../../app/common/form/MyTextInput'\nimport { useStore } from '../../app/stores/store'\nimport * as Yup from 'yup'\nimport ValidationErrors from '../errors/ValidationErrors'\n\nexport default observer(function RegisterForm() {\n    const {userStore} = useStore();\n    return (\n        <Formik\n            initialValues={{ email: '', password: '', displayName: '', userName: '', UniqueId: '', error: null }}\n            onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => setErrors({error}))}\n            validationSchema={Yup.object({\n              displayName: Yup.string().required(),\n              userName: Yup.string().required(),\n              email: Yup.string().required().email(),\n              uniqueId: Yup.string().required().matches(/^[FN]\\d{4,5}$/, 'Unique Id is of the form F1234[5] or N1234[5]'),\n              password: Yup.string().required(),\n            })}\n        >\n            {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\n                <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n                    <Header as='h2' content='Sign up to Link4Vets' color='teal' textAlign='center' />\n                    <MyTextInput name='email' placeholder='Email' />\n                    <MyTextInput name='displayName' placeholder='Display Name' />\n                    <MyTextInput name='userName' placeholder='User Name' />\n                    <MyTextInput name='uniqueId' placeholder='Unique Id' />\n                    <MyTextInput name='password' placeholder='Password' type='password' />\n                    <ErrorMessage \n                        name='error' render={() => <ValidationErrors errors={errors.error}/>}/>\n                    <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Sign up' type='submit' fluid />\n                </Form>\n            )}\n        </Formik>\n    )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Container, Header, Image, Segment } from 'semantic-ui-react'\nimport {useStore} from \"../../app/stores/store\";\nimport {observer} from \"mobx-react-lite\";\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\n\nexport default observer(function HomePage(){\n    const {userStore, modalStore} = useStore();\n\n    return (\n            <Segment inverted textAlign='center' vertical className='masthead'>\n                <Container text>\n                    <Header as='h1' inverted>\n                        <Image size='massive' src='assets/logo.jpg' alt='logo' style={{marginBottom: 12}} />\n                        Link4Vets\n                    </Header>\n                    {userStore.isLoggedIn ? (\n                        <>\n                        <Header as='h2' inverted content='Welcome to Link4Vets' />\n                        <Button as={Link} to='/apps' size='huge' inverted>Dashboard</Button>\n                        </>\n                    ) : (\n                        <>\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>Login</Button>\n                        <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>Register</Button>\n                        </>\n                    )}\n                </Container>\n            </Segment>\n    )\n})\n","import React, { useState } from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from './ValidationErrors';\n\nexport default function TestErrors() {\n    const baseUrl = process.env.REACT_APP_API_URL;\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorised() {\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'apps/notaguid').catch(err => console.log(err));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'apps', {}).catch(err => setErrors(err));\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {errors && \n                <ValidationErrors errors={errors} />\n            }\n        </>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\n\nexport default function NotFound() {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name='search'/>\n                Oops - we've looked everywhere but could not find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/apps' primary>\n                    Return to Apps dashboard\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    )\n}\n","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store'\n\nexport default observer(function ServerError() {\n    const {commonStore} = useStore();\n\n    return (\n        <Container>\n            <Header as='h1' content='Server Error'/>\n            <Header sub as='h5' color='red' content={commonStore.error?.message}/>\n            {commonStore.error?.details &&\n                <Segment>\n                    <Header as='h4' content=\"Stack trace\" color='teal' />\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\n                </Segment>\n            }\n        </Container>\n    )\n})\n","import React, { ChangeEvent, useState } from 'react'\nimport { Form, Segment } from 'semantic-ui-react'\n\nfunction handleSubmit() {\n    console.log('something')\n}\n\nfunction handleInputChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n    const {name, value} = event.target\n}\n\nexport default function FeedbackForm() {\n    const [feedback, setFeedback] = useState({\n        category: 'general',\n        message: ''\n    })\n\n    return (\n        <Segment clearing>\n            <Form onSubmit={handleSubmit} autoComplete='off'>\n                <Form.Input placeholder='Category' name='category' onChange={handleInputChange}/>\n                <Form.TextArea placeholder='Message' name='body' onChange={handleInputChange} />\n            </Form>\n        </Segment>\n    )\n}\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Modal } from 'semantic-ui-react'\nimport { useStore } from '../../stores/store'\n\nexport default observer(function ModalContainer() {\n  const {modalStore} = useStore()\n  return (\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n      <Modal.Content>\n        {modalStore.modal.body}\n      </Modal.Content>\n    </Modal>\n  )\n})\n","import { useField } from 'formik'\nimport React from 'react'\nimport { Form, Label } from 'semantic-ui-react'\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    rows: number;\n    label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n    const [field, meta] = useField(props.name)\n    return (\n        <Form.Field error={meta.touched && !!meta.error}> \n            <label>{props.label}</label>\n            <textarea {...field} {...props} />\n            {meta.touched && meta.error ? \n                <Label basic color='red'>{meta.error}</Label> : null\n            }\n        </Form.Field>\n    )\n}\n","import { Form, Formik } from 'formik'\nimport React from 'react'\nimport { Button, Segment } from 'semantic-ui-react'\nimport MyTextArea from '../../../app/common/form/MyTextArea'\nimport MyTextInput from '../../../app/common/form/MyTextInput'\nimport { useStore } from '../../../app/stores/store'\nimport * as Yup from 'yup'\n\ninterface Props {\n    setEditMode: (editMode: boolean) => void\n}\n\nexport default function ProfileEditForm({ setEditMode }: Props) {\n    const { profileStore: { profile, updateProfile } } = useStore();\n\n    const validationSchema = Yup.object({\n        displayName: Yup.string().required('The displayName is required'),\n    })\n\n    return (\n        <Segment clearing>\n            <Formik enableReinitialize\n                validationSchema={validationSchema}\n                initialValues={{\n                    displayName: profile?.displayName, bio:\n                        profile?.bio\n                }}\n                onSubmit={values => {updateProfile(values).then(() => setEditMode(false))}}>\n                {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n                    <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n                        <MyTextInput name='displayName' placeholder='Display Name' />\n                        <MyTextArea name='bio' placeholder='' rows={3} />\n                        <Button\n                            disabled={isSubmitting || !dirty || !isValid}\n                            loading={isSubmitting}\n                            floated='right' positive type='submit' content='Update Profile' />\n                    </Form>\n                )}\n            </Formik>\n        </Segment>\n    )\n}\n","import { observer } from 'mobx-react-lite'\nimport React, { useState } from 'react'\nimport { Tab, Header, Grid, Button } from 'semantic-ui-react'\nimport { useStore } from '../../app/stores/store'\nimport ProfileEditForm from './form/ProfileEditForm'\n\n\nexport default observer(function ProfileAbout() {\n    const [editMode, seteditMode] = useState(false)\n    const {profileStore: {isCurrentUser, profile}} = useStore()\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header floated='left' icon='user' content={`About ${profile!.displayName}`} />\n                    {isCurrentUser && (\n                        <Button floated='right'\n                            basic\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\n                            onClick={() => seteditMode(!editMode)} />\n                    )}\n                </Grid.Column>\n                <Grid.Column width={16}>\n                        {editMode ? (\n                            <ProfileEditForm setEditMode={seteditMode}/>\n                        ) : (\n                            <span style={{whiteSpace: 'pre-wrap'}}>{profile!.bio}</span>\n                        )}\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n\n    )\n})","import React from 'react';\nimport { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n    imagePreview: string;\n    setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\n    return (\n        <Cropper \n            src={imagePreview}\n            style={{height: 200, width: '100%'}}\n            initialAspectRatio={1}\n            aspectRatio={1}\n            preview='.img-preview'\n            guides={false}\n            viewMode={1}\n            autoCropArea={1}\n            background={false}\n            onInitialized={cropper => setCropper(cropper)}\n        />\n    )\n}","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { Header, Icon } from 'semantic-ui-react'\n\ninterface Props {\n    setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\n    const dzStyles = {\n        border: 'dashed 3px #eee',\n        borderColor: '#eee',\n        borderRadius: '5px',\n        paddingTop: '30px',\n        textAlign: 'center' as 'center',\n        height: 200\n    }\n\n    const dzActive = {\n        borderColor: 'green'\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n        })))\n    }, [setFiles])\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n    return (\n        <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles} >\n            <input {...getInputProps()} />  \n            <Icon name='upload' size='huge' />\n            <Header content='Drop image here' />\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { Button, Grid, Header } from 'semantic-ui-react';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\n\ninterface Props {\n    loading: boolean;\n    uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\n    const [files, setFiles] = useState<any>([]);\n    const [cropper, setCropper] = useState<Cropper>();\n\n    function onCrop() {\n        if (cropper) {\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\n        }\n    }, [files])\n\n    return (\n        <Grid>\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 1 - Add Photo' />\n                <PhotoWidgetDropzone setFiles={setFiles} />\n            </Grid.Column>\n            <Grid.Column width={1} />\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 2 - Resize image' />\n                {files && files.length > 0 && (\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\n                )}\n            </Grid.Column>\n            <Grid.Column width={1} />\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 3 - Preview & Upload' />\n                {files && files.length > 0 &&\n                    <>\n                        <div className='img-preview' style={{ minHeight: 200, overflow: 'hidden' }} />\n                        <Button.Group widths={2}>\n                            <Button loading={loading} onClick={onCrop} positive icon='check' />\n                            <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\n                        </Button.Group>\n                    </>}\n\n            </Grid.Column>\n        </Grid>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\nimport { Photo, Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n    const { profileStore: { isCurrentUser, uploadPhoto, \n            uploading, loading, setMainPhoto, deletePhoto } } = useStore();\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\n    const [target, setTarget] = useState('');\n\n    function handlePhotoUpload(file: Blob) {\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\n    }\n\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        setMainPhoto(photo);\n    }\n\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        deletePhoto(photo);\n    }\n\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header floated='left' icon='image' content='Photos' />\n                    {isCurrentUser && (\n                        <Button floated='right' basic\n                            content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n                            onClick={() => setAddPhotoMode(!addPhotoMode)}\n                        />\n                    )}\n                </Grid.Column>\n                <Grid.Column width={16}>\n                    {addPhotoMode ? (\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\n                    ) : (\n                            <Card.Group itemsPerRow={5}>\n                                {profile.photos?.map(photo => (\n                                    <Card key={photo.id}>\n                                        <Image src={photo.url} />\n                                        {isCurrentUser && (\n                                            <Button.Group fluid widths={2}>\n                                                <Button \n                                                    basic\n                                                    color='green'\n                                                    content='Main'\n                                                    name={'main' + photo.id}\n                                                    disabled={photo.isMain}\n                                                    loading={target === 'main' + photo.id && loading}\n                                                    onClick={e => handleSetMainPhoto(photo, e)}\n                                                />\n                                                <Button \n                                                    basic \n                                                    color='red' \n                                                    icon='trash' \n                                                    loading={target === photo.id && loading}\n                                                    onClick={e => handleDeletePhoto(photo, e)}\n                                                    disabled={photo.isMain}\n                                                    name={photo.id}\n                                                />\n                                            </Button.Group>\n                                        )}\n                                    </Card>\n                                ))}\n                            </Card.Group>\n                        )}\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n})\n","\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport ProfileAbout from './ProfileAbout';\nimport ProfilePhotos from './ProfilePhotos';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileContent({profile}: Props) {\n    const panes = [\n        {menuItem: 'About', render: () => <Tab.Pane><ProfileAbout/></Tab.Pane>},\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\n        {menuItem: 'Settings', render: () => <Tab.Pane>Settings Content</Tab.Pane>},\n    ];\n\n    return (\n        <Tab \n            menu={{fluid: true, vertical: true,}}\n            menuPosition='right'\n            panes={panes}\n        />\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Divider, Grid, Header, Item, Reveal, Segment, Statistic } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileHeader({profile}: Props) {\n    return (\n        <Segment>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Item.Group>\n                        <Item>\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\n                            <Item.Content verticalAlign='middle'>\n                                <Header as='h1' content={profile.displayName} />\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Grid.Column>\n            </Grid>\n        </Segment>\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { useStore } from '../../app/stores/store';\nimport ProfileContent from './ProfileContent';\nimport ProfileHeader from './ProfileHeader';\n\nexport default observer(function ProfilePage() {\n    const { userName } = useParams<{ userName: string }>();\n    const { profileStore } = useStore();\n    const { loadingProfile, loadProfile, profile } = profileStore;\n\n    useEffect(() => {\n        loadProfile(userName);\n    }, [loadProfile, userName])\n\n    if (loadingProfile) return <LoadingComponent content='Loading profile...' />\n\n    return (\n        <Grid>\n            <Grid.Column width={16}>\n                {profile &&\n                    <>\n                        <ProfileHeader profile={profile} />\n                        <ProfileContent profile={profile} />\n                    </>}\n            </Grid.Column>\n        </Grid>\n    )\n})","import React from 'react'\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router'\nimport { useStore } from '../stores/store'\n\ninterface Props extends RouteProps {\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\n  const {userStore: {isLoggedIn}} = useStore()\n  return (\n    <Route \n      {...rest}\n      render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\n    />\n  )\n}\n","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ApplicationDashboard from '../../features/applications/dashboard/ApplicationDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch } from 'react-router';\nimport HomePage from '../../features/home/HomePage';\nimport ApplicationDetails from '../../features/applications/details/ApplicationDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport FeedbackForm from '../../features/feedback/FeedbackForm';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n    \n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path='/apps' component={ApplicationDashboard} />\n                <PrivateRoute path='/apps/:id' component={ApplicationDetails} />\n                <PrivateRoute path='/profiles/:userName' component={ProfilePage} />\n                <PrivateRoute path='/feedback' component={FeedbackForm} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}